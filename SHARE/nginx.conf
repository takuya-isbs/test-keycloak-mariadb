user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
       worker_connections 1024;
}

http {
    # for DEBUG (!!!NOTE!!! request_body is saved)
    # log_format dangerdebuglog
    # '$remote_addr '
    # '[$time_iso8601] '
    # 'HTTP '
    # '$http_host '
    # '"$request_method $request_uri $server_protocol" '
    # '$status '
    # 'req:$request_length '
    # 'res:$bytes_sent '
    # 'ref:$http_referer '
    # 'body:"$request_body" '
    # '"$http_user_agent"'
    # ;
    # access_log  /var/log/nginx/access.log  dangerdebuglog;

    log_format httplog
    '$remote_addr '
    '[$time_iso8601] '
    'HTTP '
    '$http_host '
    '"$request_method $request_uri $server_protocol" '
    '$status '
    'req:$request_length '
    'res:$bytes_sent '
    'ref:$http_referer '
    '"$http_user_agent"'
    ;
    access_log  /var/log/nginx/access.log  httplog;

    # sendfile            on;
    # tcp_nopush          on;
    # tcp_nodelay         on;
    # keepalive_timeout   65;
    # types_hash_max_size 2048;
    # client_max_body_size 8g;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    # Hide NGINX version
    server_tokens off;

    server {
        server_name keycloak.example.org;

        listen 443 ssl;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/key.pem;

        # Enable TLS v1.3
        ssl_protocols TLSv1.3 TLSv1.2;
        # Strict Transport Security
        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
        # Disable obsolete CBC ciphers
        # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ciphers
        # (default HIGH:!aNULL:!MD5;)
        # (This default may be changed by openssl and nginx)
        ssl_ciphers HIGH:!aNULL:!MD5:!SHA1:!SHA256:!SHA384 ;

        # keepalive_timeout  180;
        # send_timeout 180;
        # client_body_timeout 180;
        # client_header_timeout 180;
        # proxy_send_timeout 180;
        # proxy_read_timeout 180;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-Proto https;

        location / {
            return 301 /auth/;
        }
        location /auth/ {
            proxy_pass http://keycloak:8080/auth/;
        }
    }

    server {
        server_name jwtserver.example.org;

        listen 443 ssl;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/key.pem;

        # Enable TLS v1.3
        ssl_protocols TLSv1.3 TLSv1.2;
        # Strict Transport Security
        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
        # Disable obsolete CBC ciphers
        # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ciphers
        # (default HIGH:!aNULL:!MD5;)
        # (This default may be changed by openssl and nginx)
        ssl_ciphers HIGH:!aNULL:!MD5:!SHA1:!SHA256:!SHA384 ;

        # keepalive_timeout  180;
        # send_timeout 180;
        # client_body_timeout 180;
        # client_header_timeout 180;
        # proxy_send_timeout 180;
        # proxy_read_timeout 180;

        proxy_set_header Host    $host;
        proxy_set_header X-Real-IP    $remote_addr;
        proxy_set_header X-Forwarded-Host       $host;
        proxy_set_header X-Forwarded-Server    $host;
        #proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-Proto https;

        location / {
            # To ignore 'nginx: [emerg] host not found in upstream "jwt-server"'
            # (jwt-server is not started when ./up.sh INIT)
            # (NOT WORK: proxy_pass http://jwt-server:8080;)
            # (NOT WORK: proxy_pass http://$upstream_jwtserver/; (last / is unnecessary))
            resolver 127.0.0.11 valid=30s;
            set $upstream_jwtserver jwt-server:8080;
            proxy_pass http://$upstream_jwtserver;
        }
    }

    server {
        listen         443 ssl default_server;
        server_name    _;
        ssl_certificate /etc/nginx/dummycert.pem;
        ssl_certificate_key /etc/nginx/dummykey.pem;

        # hide error page
        # https://nginx.org/en/docs/http/ngx_http_ssl_module.html?#errors
        error_page 400 495 496 497 =444 /444.html;

        location /444.html {
            return 444;
        }
        location / {
            return 444;
        }
    }

}
