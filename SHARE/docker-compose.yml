x-common: &common
  restart: "unless-stopped"
  init: true
  extra_hosts:
    - "keycloak.example.org keycloak:10.60.204.11"
    - "jwtserver.example.org jwtserver:10.60.204.11"

services:
  mariadb:
    hostname: mariadb
    build: ./mariadb
    # Copy-pasted from https://github.com/docker-library/mariadb/issues/94
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
    networks:
      mynet:
    ports:
      # https://mariadb.com/kb/en/configuring-mariadb-galera-cluster/#network-ports
      # https://mariadb.com/kb/en/galera-cluster-system-variables/
      # Standard MariaDB Port (default: 3306)
      # for Keycloak in Docker network
      #- 3306:3306
      # Galera Replication Port (default: 4567)
      - 4567:4567/udp
      - 4567:4567/tcp
      # IST Port (default: 4568)
      - 4568:4568
      # SST Port (default: 4444)
      - 4444:4444
    volumes:
      - type: volume
        source: mariadb_data
        target: /var/lib/mysql
      - ./mariadb/initdb.d/sysbench.sql:/docker-entrypoint-initdb.d/sysbench.sql:ro
      - ./hostlist.txt:/hostlist.txt:ro
      - ./mariadb/mariadb-add-jwt-server.sh:/mariadb-add-jwt-server.sh:ro
    environment:
      - WSREP_NODE_ADDRESS=${WSREP_NODE_ADDRESS:-}
      - WSREP_NEW_CLUSTER=${WSREP_NEW_CLUSTER:-no}
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=yes
      # % = any source IP address
      - MARIADB_ROOT_HOST=%
      # TODO - MARIADB_ROOT_HOST=localhost
      # TODO - MARIADB_ROOT_PASSWORD=secret123
      - MARIADB_DATABASE=keycloak
      - MARIADB_USER=keycloak
      - MARIADB_PASSWORD=${MARIADB_PASSWORD:-keycloak_password}
      - MARIADB_INITDB_SKIP_TZINFO=true
      - TZ=Asia/Tokyo
      - JWTSERVER_DB=${JWTSERVER_DB}
      - JWTSERVER_DB_USER=${JWTSERVER_DB_USER}
      - JWTSERVER_DB_PASSWORD=${JWTSERVER_DB_PASSWORD}
    <<: [*common]

  # Legacy Keycloak (WildFly)
  keycloak-old:
    # SEE: https://github.com/keycloak/keycloak-containers/blob/15.0.2/docker-compose-examples/keycloak-mariadb-jdbc-ping.yml
    # SEE: https://github.com/keycloak/keycloak-containers/tree/15.0.2/server
    hostname: keycloak
    #image: quay.io/keycloak/keycloak:15.0.2
    image: keycloak/keycloak:15.0.2  # to quary.io via registory proxy
    #image: keycloak/keycloak:19.0.3-legacy  # to quary.io via registory proxy
    networks:
      mynet:
    ports:
      - 8080:8080
      - 7600:7600
    environment:
      - PROXY_ADDRESS_FORWARDING=true
      - DB_VENDOR=mariadb
      - DB_ADDR=mariadb
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=${MARIADB_PASSWORD:-keycloak_password}
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD:-admin}
      # SEE: https://github.com/fit2anything/keycloak-cluster-setup-and-configuration/blob/master/README.md#3-jdbc_ping
      # SEE: https://www.keycloak.org/2019/05/keycloak-cluster-setup
      - JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
      - JGROUPS_DISCOVERY_EXTERNAL_IP=${MY_IPADDR:-}
      # SEE: https://keycloak.discourse.group/t/keycloak-running-on-docker-cannot-synchronize-member-cluster/17256/4
      # for k8s...?
      #- JGROUPS_DISCOVERY_PROTOCOL=dns.DNS_PING
      #- JGROUPS_DISCOVERY_PROPERTIES=dns_query=keycloak
      # SEE: https://github.com/keycloak/keycloak-containers/tree/15.0.2/server#clustering
      # SEE: https://github.com/keycloak/keycloak-containers/blob/15.0.2/server/tools/cli/infinispan/cache-owners.cli
      - CACHE_OWNERS_COUNT=3
      - CACHE_OWNERS_AUTH_SESSIONS_COUNT=3
    volumes:
      # SEE: https://keycloak.discourse.group/t/cluster-keycloak-ha-jdbc-ping-jgroups-discovery-external-ip/10137/3
      # SEE: https://github.com/keycloak/keycloak-containers/pull/204#issuecomment-575152116
      - ./JDBC_PING.cli:/opt/jboss/tools/cli/jgroups/discovery/JDBC_PING.cli:ro
    <<: [*common]

  # New Keycloak (Quarkus)
  # https://keycloak.discourse.group/t/use-of-jdbc-ping-with-keycloak-17-quarkus-distro/13571
  # https://gist.github.com/xgp/768eea11f92806b9c83f95902f7f8f80
  # https://qiita.com/uturned0/items/e9256c48ccba6f588d79
  keycloak:
    hostname: keycloak
    #image: quay.io/keycloak/keycloak:24
    #image: keycloak/keycloak:24  # to quary.io via registory proxy
    build: ./keycloak-quarkus
    networks:
      mynet:
    ports:
      - 8080:8080
      - 7600:7600
    environment:
      # https://www.keycloak.org/server/all-config?options-filter=all
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD:-admin}
      - KC_DB=mariadb
      #- KC_DB_URL=jdbc:mysql://mariadb:3306/keycloak  # not work...??
      - KC_DB_URL_HOST=mariadb
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_URL_PORT=3306
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${MARIADB_PASSWORD:-keycloak_password}
      - KC_TRANSACTION_XA_ENABLED=false
      # cache
      # TODO https://gist.github.com/xgp/768eea11f92806b9c83f95902f7f8f80
      - KC_CACHE=ispn
      - KC_CACHE_STACK=tcp
      # for reverse proxy
      - KC_PROXY=edge
      - KC_PROXY_ADDRESS_FORWARDING=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=8080
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_LOG_LEVEL=INFO,org.infinispan:DEBUG,org.jgroups:DEBUG
      #- KC_LOG_LEVEL=DEBUG,org.infinispan:DEBUG,org.jgroups:DEBUG
    <<: [*common]

  # jwt-server
  jwt-server:
    build: ./jwt-server
    hostname: jwtserver
    networks:
      mynet:
    volumes:
      - ./certs/minica.pem:/usr/share/pki/ca-trust-source/anchors/minica.crt
    environment:
      - CATALINA_OPTS="-Xmx512m"
      - KEYCLOAK=${JWTSERVER_KEYCLOAK_HOSTNAME:-keycloak.example.org}
      - REALM=${JWTSERVER_REALM:-HPCI}
      - CLIENT=${JWTSERVER_CLIENT:-hpci-jwt-server}
      - USERCLAIM=${JWTSERVER_USERCLAIM:-hpci.id}
      - SECRET=${JWTSERVER_SECRET}
      - MYSQL_HOST=mariadb
      - DB=${JWTSERVER_DB}
      - USER=${JWTSERVER_DB_USER}
      - PASSWORD=${JWTSERVER_DB_PASSWORD}
    <<: [*common]

  nginx:
    hostname: nginx
    image: nginx
    networks:
      mynet:
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs/keycloak.example.org/cert.pem:/etc/nginx/cert.pem:ro
      - ./certs/keycloak.example.org/key.pem:/etc/nginx/key.pem:ro
      - ./certs/dummy.example.org/cert.pem:/etc/nginx/dummycert.pem:ro
      - ./certs/dummy.example.org/key.pem:/etc/nginx/dummykey.pem:ro
    <<: [*common]

  keepalived:
    # SEE: https://github.com/osixia/docker-keepalived
    image: osixia/keepalived:2.0.20
    # Change and use host network
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
    volumes:
      # SEE: https://github.com/osixia/docker-keepalived/issues/33#issuecomment-1436201438
      - ./keepalived-entrypoint.sh:/keepalived-entrypoint.sh
    entrypoint: ["sh", "/keepalived-entrypoint.sh"]
    environment:
      #KEEPALIVED_COMMAND_LINE_ARGUMENTS: --log-detail
      KEEPALIVED_UNICAST_PEERS: "#PYTHON2BASH:['10.60.204.101', '10.60.204.102', '10.60.204.103']"
      KEEPALIVED_VIRTUAL_IPS: 10.60.204.11/24
      KEEPALIVED_INTERFACE: eth0
      KEEPALIVED_PASSWORD: ${KEEPALIVED_PASSWORD:-SzVzOEFeXW9zEws02iPz645urNVGxUsB}
    <<: [*common]

  # squid:
  #   image: ubuntu/squid
  #   networks:
  #     mynet:
  #   ports:
  #     - "0.0.0.0:13128:3128"
  #   volumes:
  #     - ./squid-allow-ssl-ports.conf:/etc/squid/conf.d/allow-ssl-ports.conf:ro
  #   <<: [*common]

volumes:
  mariadb_data:

networks:
  mynet:  # IPv4 only
    driver: bridge
